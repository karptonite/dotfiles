let g:snips_author="Daniel Karp"
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsListSnippets="<c-l>"
let g:UltiSnipsJumpForwardTrigger="<c-j>"
let g:UltiSnipsJumpBackwardTrigger="<c-k>"

" let g:phpcomplete_enhance_jump_to_definition = 0
source ~/dotfiles/bundles.vim
" scriptencoding utf-8
set background=dark
colorscheme blackboard

" " handled by vim-sleuth now?
set tabstop=3
set softtabstop=3
set shiftwidth=3
set tags=tags

let php_sql_query=1

let g:syntastic_always_populate_loc_list = 1
let g:airline_powerline_fonts = 1
let g:airline#extensions#whitespace#enabled = 0
let g:airline#extensions#tabline#enabled = 1

" let g:ycm_min_num_of_chars_for_completion = 2
" let g:ycm_collect_identifiers_from_tags_files = 1
" let g:ycm_collect_identifiers_from_comments_and_strings = 1
" let g:ycm_complete_in_comments = 1
" let g:ycm_autoclose_preview_window_after_completion = 1
" let g:ycm_autoclose_preview_window_after_insertion = 1
let delimitMate_expand_space = 1
let delimitMate_expand_cr = 1

set backupdir=~/vimtmp
set dir=~/vimtmp
set number
set relativenumber
set hlsearch
set cursorline
call togglebg#map("")
set guifont=Menlo\ Regular:h12
set hidden
set lazyredraw

cnoremap <C-p> <Up>
cnoremap <C-n> <Down>

set smartcase
set ignorecase
set title
set wrap linebreak
set listchars=tab:â–¸\ ,trail:Â·
set scrolloff=2
set autoread
" Fix the & command in normal+visual modes {{{
nnoremap & :&&<Enter>
xnoremap & :&&<Enter>
" }}}

" Dot command now works in visual mode
xnoremap . :normal .<CR>
xnoremap @ :<C-u>call ExecuteMacroOverVisualRange()<CR>

function! ExecuteMacroOverVisualRange()
  echo "@".getcmdline()
  execute ":'<,'>normal @".nr2char(getchar())
endfunction

let mapleader = ","
noremap \ ,
nnoremap ' `
nnoremap ` '
set wildmode=list:longest
" tabularize both = an =>
nmap <leader>= :Tab /=>\@!<CR>
nmap <Leader>] :Tab /=><CR>
vmap <leader>= :Tab /=>\@!<CR>
vmap <Leader>] :Tab /=><CR>
nmap <silent> <leader>d <Plug>DashSearch
nmap <leader>v :tabedit $MYVIMRC<CR>
nmap <leader>c yi'f'a => self::<ESC>"0pviwUA
nmap <leader>a 0wyiwysiw'A => $args['0'],F$
"Align array
nmap <silent> <leader>l :delmarks l<CR>0mlvi(<..........gv:s/\s\+/ /g<CR>:nohlsearch<CR>gv:Align =><CR>gv='lm-

" Bubble single lines
nmap <C-k> [e
nmap <C-j> ]e
" Bubble multiple lines
vmap <C-k> [egv
vmap <C-j> ]egv

"Make an undo point before deleting with ctrl-w in insert mode
inoremap <C-W> <C-G>u<C-W>

" Make Y behave like C and D
nnoremap Y y$

" Make cw behave like dw and yw
onoremap w :execute 'normal! '.v:count1.'w'<CR>

function! s:MkNonExDir(file, buf)
    if empty(getbufvar(a:buf, '&buftype')) && a:file!~#'\v^\w+\:\/'
        let dir=fnamemodify(a:file, ':h')
        if !isdirectory(dir)
            call mkdir(dir, 'p')
        endif
    endif
endfunction
nnoremap <leader>u :GundoToggle<CR>
if has("autocmd")
	augroup BWCCreateDir
		autocmd!
		autocmd BufWritePre * :call s:MkNonExDir(expand('<afile>'), +expand('<abuf>'))
	augroup END
	augroup mygroup
		autocmd!
		autocmd bufwritepost .vimrc source $MYVIMRC
		autocmd bufwritepost .vimrc AirlineRefresh
		autocmd BufRead,BufNewFile *.tpl set filetype=html
		autocmd FileType php set commentstring=//\ %s
		autocmd BufWritePost *.php EnableFastPHPFolds
		autocmd FileType php AlignCtrl g =>
		autocmd FileType md setlocal formatoptions+=t 
	augroup END
endif

set ssop-=options    " do not store global and local values in a session
set ssop-=folds      " do not store folds

let g:instant_markdown_slow = 1
let g:ctrlp_show_hidden = 1
let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_cache_dir = $HOME . '/.cache/ctrlp'
let g:ctrlp_max_files=30000 
let g:ctrlp_open_new_file = 'h'
let g:ctrlp_lazy_update = 1
" Folding settings
nnoremap <silent> <Space> @=(foldlevel('.')?'za':"\<Space>")<CR>
set wildignore+=*/pear/*,*/Zend/*,*/EbatNs/*,*/angular-1.1.x/*,*/documentation/*

nnoremap <silent> n   n:call HLNext(0.4)<cr>
nnoremap <silent> N   N:call HLNext(0.4)<cr>

function! HLNext (blinktime)
	let [bufnum, lnum, col, off] = getpos('.')
	highlight WhiteOnRed ctermfg=white ctermbg=red
	let matchlen = strlen(matchstr(strpart(getline('.'),col-1),@/))
	let target_pat = '\c\%#'.@/
	let ring = matchadd('WhiteOnRed', target_pat, 101)
	redraw
	exec 'sleep ' . float2nr(a:blinktime * 1000) . 'm'
	call matchdelete(ring)
	redraw
endfunction

highlight ColorColumn ctermbg=magenta
call matchadd('ColorColumn', '\%101v', 100)

" search .htaccess with Silver Searcher
let g:agprg="ag --column --hidden --max-count 1000"
" Syntastic settings{{{
let g:syntastic_php_checkers = ['php']
"}}}
" Improved PHP Omnicompletion
let g:phpcomplete_relax_static_constraint = 1

let g:pdv_template_dir = $HOME ."/.vim/bundle/pdv/templates_snip"
nnoremap <Leader>p :call pdv#DocumentWithSnip()<CR>

" vim:ft=vim:foldmethod=marker
